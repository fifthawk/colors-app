{"ast":null,"code":"var _jsxFileName = \"/Users/jackallen/Desktop/Code/liftoff/final-project/client/src/Components/Color/Color.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Color.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Color = () => {\n  _s();\n\n  const [colors, setColors] = useState();\n\n  async function fetchColors() {\n    await axios.get(url).then(res => {\n      setColors(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    fetchColors();\n  }, []);\n\n  function invertColor(hex) {\n    if (hex.indexOf('#') === 0) {\n      hex = hex.slice(1);\n    } // convert 3-digit hex to 6-digits.\n\n\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    if (hex.length !== 6) {\n      throw new Error('Invalid HEX color.');\n    } // invert color components\n\n\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16); // pad each with zeros and return\n\n    return '#' + padZero(r) + padZero(g) + padZero(b);\n  }\n\n  function padZero(str, len) {\n    len = len || 2;\n    var zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n  }\n\n  const url = \"https://x-colors.herokuapp.com/api/random?number=7\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: colors !== undefined ? colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: invertColor(color.hex)\n        },\n        children: `HEX: ${color.hex} || ${color.hsl.toUpperCase()} || ${color.rgb.toUpperCase()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: invertColor(color.hex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-boxes\",\n        onClick: fetchColors,\n        style: {\n          background: color.hex,\n          width: \"55em\",\n          height: \"5.25em \",\n          margin: \"1em auto\",\n          border: \".25em black solid\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Color, \"96sCZb+YiFkSluUyto9LdKYUWTk=\");\n\n_c = Color;\nexport default Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/jackallen/Desktop/Code/liftoff/final-project/client/src/Components/Color/Color.jsx"],"names":["React","useState","useEffect","axios","Color","colors","setColors","fetchColors","get","url","then","res","data","catch","error","console","log","invertColor","hex","indexOf","slice","length","Error","r","parseInt","toString","g","b","padZero","str","len","zeros","Array","join","undefined","map","color","textAlign","hsl","toUpperCase","rgb","background","width","height","margin","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Color.css\";\n\nconst Color = () => {\n  const [colors, setColors] = useState();\n\n  async function fetchColors() {\n    await axios\n      .get(url)\n      .then((res) => {\n        setColors(res.data);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  useEffect(() => {\n    fetchColors();\n  }, []);\n\n  function invertColor(hex) {\n    if (hex.indexOf('#') === 0) {\n        hex = hex.slice(1);\n    }\n    // convert 3-digit hex to 6-digits.\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    if (hex.length !== 6) {\n        throw new Error('Invalid HEX color.');\n    }\n    // invert color components\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n    // pad each with zeros and return\n    return '#' + padZero(r) + padZero(g) + padZero(b);\n}\n\nfunction padZero(str, len) {\n    len = len || 2;\n    var zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n}\n\n  const url = \"https://x-colors.herokuapp.com/api/random?number=7\";\n\n  \n\n  return (\n    <>\n      {colors !== undefined ? (\n\n        colors.map((color) => (\n          \n          <div className=\"container\">\n            <h1 style={{ textAlign: \"center\", color: invertColor(color.hex) }}>{`HEX: ${\n              color.hex\n            } || ${color.hsl.toUpperCase()} || ${color.rgb.toUpperCase()}`}</h1>\n            <p>{invertColor(color.hex)}</p>\n            <div\n              className=\"color-boxes\"\n              onClick={fetchColors}\n              style={{\n                background: color.hex,\n                width: \"55em\",\n                height: \"5.25em \",\n                margin: \"1em auto\",\n                border: \".25em black solid\",\n              }}\n            ></div>\n          </div>\n        ))\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default Color;\n"]},"metadata":{},"sourceType":"module"}