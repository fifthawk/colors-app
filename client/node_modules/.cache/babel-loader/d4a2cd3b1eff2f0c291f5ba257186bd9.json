{"ast":null,"code":"var _jsxFileName = \"/Users/jackallen/Desktop/Code/liftoff/final-project/client/src/Components/Color/Color.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Color.css\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Color = () => {\n  _s();\n\n  const [colors, setColors] = useState();\n  const url = \"https://x-colors.herokuapp.com/api/random?number=5\";\n\n  async function fetchColors() {\n    await axios.get(url).then(res => {\n      setColors(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    fetchColors();\n  }, []);\n\n  function invertColor(hex) {\n    if (hex.indexOf(\"#\") === 0) {\n      hex = hex.slice(1);\n    }\n\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    if (hex.length !== 6) {\n      throw new Error(\"Invalid HEX color.\");\n    }\n\n    let r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n    return \"#\" + padZero(r) + padZero(g) + padZero(b);\n  }\n\n  function padZero(str, len) {\n    len = len || 2;\n    let zeros = new Array(len).join(\"0\");\n    return (zeros + str).slice(-len);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: colors !== undefined ? colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        background: invertColor(color.hex)\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-boxes\",\n        onClick: fetchColors,\n        style: {\n          background: color.hex,\n          border: \".25em black solid\",\n          borderRadius: \"50%\",\n          height: \"100px\",\n          width: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: color.hex,\n          marginTop: \"1em\"\n        },\n        children: color.hex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: color.hex,\n          marginTop: \"1em\"\n        },\n        children: color.hsl.replace(\"hsl\", \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: color.hex,\n          marginTop: \"1em\"\n        },\n        children: color.rgb.replace(\"rgb\", \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: invertColor(color.hex),\n          background: color.hex,\n          height: \"100px\",\n          width: \"100px\",\n          borderRadius: \"50%\",\n          textAlign: \"center\"\n        },\n        children: invertColor(color.hex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Spinner, {\n      className: \"spinner\",\n      animation: \"border\",\n      role: \"status\",\n      size: \"lg\",\n      style: {\n        color: \"#EFD09E\",\n        display: \"block\",\n        marginLeft: \"40%\",\n        marginTop: \"20%\",\n        height: \"10em\",\n        width: \"10em\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Color, \"96sCZb+YiFkSluUyto9LdKYUWTk=\");\n\n_c = Color;\nexport default Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/jackallen/Desktop/Code/liftoff/final-project/client/src/Components/Color/Color.jsx"],"names":["React","useState","useEffect","axios","Spinner","Color","colors","setColors","url","fetchColors","get","then","res","data","catch","error","console","log","invertColor","hex","indexOf","slice","length","Error","r","parseInt","toString","g","b","padZero","str","len","zeros","Array","join","undefined","map","color","background","border","borderRadius","height","width","marginTop","hsl","replace","rgb","textAlign","display","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Color.css\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst Color = () => {\n  const [colors, setColors] = useState();\n\n  const url = \"https://x-colors.herokuapp.com/api/random?number=5\";\n\n  async function fetchColors() {\n    await axios\n      .get(url)\n      .then((res) => {\n        setColors(res.data);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  useEffect(() => {\n    fetchColors();\n  }, []);\n\n  function invertColor(hex) {\n    if (hex.indexOf(\"#\") === 0) {\n      hex = hex.slice(1);\n    }\n\n    if (hex.length === 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    if (hex.length !== 6) {\n      throw new Error(\"Invalid HEX color.\");\n    }\n\n    let r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n      g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n      b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n\n    return \"#\" + padZero(r) + padZero(g) + padZero(b);\n  }\n\n  function padZero(str, len) {\n    len = len || 2;\n    let zeros = new Array(len).join(\"0\");\n    return (zeros + str).slice(-len);\n  }\n\n  return (\n    <>\n      {colors !== undefined ? (\n        colors.map((color) => (\n          <div\n            className=\"container\"\n            style={{ background: invertColor(color.hex) }}\n          >\n            <div\n              className=\"color-boxes\"\n              onClick={fetchColors}\n              style={{\n                background: color.hex,\n                border: \".25em black solid\",\n                borderRadius: \"50%\",\n                height: \"100px\",\n                width: \"100px\",\n              }}\n            ></div>\n            <h3 style={{ color: color.hex, marginTop: \"1em\" }}>{color.hex}</h3>\n            <h3 style={{ color: color.hex, marginTop: \"1em\" }}>\n              {color.hsl.replace(\"hsl\", \"\")}\n            </h3>\n            <h3 style={{ color: color.hex, marginTop: \"1em\" }}>\n              {color.rgb.replace(\"rgb\", \"\")}\n            </h3>\n            <h3\n              style={{\n                color: invertColor(color.hex),\n                background: color.hex,\n                height: \"100px\",\n                width: \"100px\",\n                borderRadius: \"50%\",\n                textAlign: \"center\"\n              }}\n            >\n              {invertColor(color.hex)}\n            </h3>\n          </div>\n        ))\n      ) : (\n        <Spinner\n          className=\"spinner\"\n          animation=\"border\"\n          role=\"status\"\n          size=\"lg\"\n          style={{\n            color: \"#EFD09E\",\n            display: \"block\",\n            marginLeft: \"40%\",\n            marginTop: \"20%\",\n            height: \"10em\",\n            width: \"10em\",\n          }}\n        ></Spinner>\n      )}\n    </>\n  );\n};\n\nexport default Color;\n"]},"metadata":{},"sourceType":"module"}