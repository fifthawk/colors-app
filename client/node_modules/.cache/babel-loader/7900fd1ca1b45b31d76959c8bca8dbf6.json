{"ast":null,"code":"var _jsxFileName = \"/Users/jackallen/Desktop/Code/liftoff/final-project/client/src/Components/Color/Color.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Color.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Color = () => {\n  _s();\n\n  const [colors, setColors] = useState();\n\n  async function fetchColors() {\n    await axios.get(url).then(res => {\n      setColors(res.data);\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    fetchColors();\n  }, []);\n\n  function invertHex(hex) {\n    return (Number(`0x1${hex}`) ^ 0xFFFFFF).toString(16).substring(1).toUpperCase();\n  }\n\n  const url = \"https://x-colors.herokuapp.com/api/random?number=7\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: colors !== undefined ? colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: color.hex,\n          background: invertHex(color.hex)\n        },\n        children: `HEX: ${color.hex} || ${color.hsl.toUpperCase()} || ${color.rgb.toUpperCase()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-boxes\",\n        onClick: fetchColors,\n        style: {\n          background: color.hex,\n          width: \"55em\",\n          height: \"5.25em \",\n          margin: \"1em auto\",\n          border: \".25em black solid\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Color, \"96sCZb+YiFkSluUyto9LdKYUWTk=\");\n\n_c = Color;\nexport default Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/jackallen/Desktop/Code/liftoff/final-project/client/src/Components/Color/Color.jsx"],"names":["React","useState","useEffect","axios","Color","colors","setColors","fetchColors","get","url","then","res","data","catch","error","console","log","invertHex","hex","Number","toString","substring","toUpperCase","undefined","map","color","textAlign","background","hsl","rgb","width","height","margin","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;;AAEA,iBAAeM,WAAf,GAA6B;AAC3B,UAAMJ,KAAK,CACRK,GADG,CACCC,GADD,EAEHC,IAFG,CAEGC,GAAD,IAAS;AACbL,MAAAA,SAAS,CAACK,GAAG,CAACC,IAAL,CAAT;AACD,KAJG,EAKHC,KALG,CAKIC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALd,CAAN;AAMD;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASU,SAAT,CAAmBC,GAAnB,EAAwB;AACxB,WAAO,CAACC,MAAM,CAAE,MAAKD,GAAI,EAAX,CAAN,GAAsB,QAAvB,EAAiCE,QAAjC,CAA0C,EAA1C,EAA8CC,SAA9C,CAAwD,CAAxD,EAA2DC,WAA3D,EAAP;AACD;;AAEC,QAAMb,GAAG,GAAG,oDAAZ;AAIA,sBACE;AAAA,cACGJ,MAAM,KAAKkB,SAAX,GAEClB,MAAM,CAACmB,GAAP,CAAYC,KAAD,iBACT;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBD,UAAAA,KAAK,EAAEA,KAAK,CAACP,GAApC;AAAyCS,UAAAA,UAAU,EAAEV,SAAS,CAACQ,KAAK,CAACP,GAAP;AAA9D,SAAX;AAAA,kBAA0F,QACxFO,KAAK,CAACP,GACP,OAAMO,KAAK,CAACG,GAAN,CAAUN,WAAV,EAAwB,OAAMG,KAAK,CAACI,GAAN,CAAUP,WAAV,EAAwB;AAF7D;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAEf,WAFX;AAGE,QAAA,KAAK,EAAE;AACLoB,UAAAA,UAAU,EAAEF,KAAK,CAACP,GADb;AAELY,UAAAA,KAAK,EAAE,MAFF;AAGLC,UAAAA,MAAM,EAAE,SAHH;AAILC,UAAAA,MAAM,EAAE,UAJH;AAKLC,UAAAA,MAAM,EAAE;AALH;AAHT;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFD,gBAqBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBJ,mBADF;AA2BD,CAnDD;;GAAM7B,K;;KAAAA,K;AAqDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Color.css\";\n\nconst Color = () => {\n  const [colors, setColors] = useState();\n\n  async function fetchColors() {\n    await axios\n      .get(url)\n      .then((res) => {\n        setColors(res.data);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  useEffect(() => {\n    fetchColors();\n  }, []);\n\n  function invertHex(hex) {\n  return (Number(`0x1${hex}`) ^ 0xFFFFFF).toString(16).substring(1).toUpperCase()\n}\n\n  const url = \"https://x-colors.herokuapp.com/api/random?number=7\";\n\n  \n\n  return (\n    <>\n      {colors !== undefined ? (\n        \n        colors.map((color) => (\n          <div className=\"container\">\n            <h1 style={{ textAlign: \"center\", color: color.hex, background: invertHex(color.hex) }}>{`HEX: ${\n              color.hex\n            } || ${color.hsl.toUpperCase()} || ${color.rgb.toUpperCase()}`}</h1>\n            <div\n              className=\"color-boxes\"\n              onClick={fetchColors}\n              style={{\n                background: color.hex,\n                width: \"55em\",\n                height: \"5.25em \",\n                margin: \"1em auto\",\n                border: \".25em black solid\",\n              }}\n            ></div>\n          </div>\n        ))\n      ) : (\n        <p>Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default Color;\n"]},"metadata":{},"sourceType":"module"}